<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.board.mapper.BoardMapper">
	<insert id="insertBoard" parameterType="Board">
		<selectKey keyProperty="num" resultType="_int"
			order="BEFORE">
			select spring_board_seq.nextval from dual
		</selectKey>
		insert into spring_board(num, name, passwd, subject, content, wdate,
		readnum, filename, originFilename, filesize, refer, lev, sunbun)
		values(#{num}, #{name}, #{passwd}, #{subject}, #{content:VARCHAR},
		SYSDATE, #{readnum}, #{filename:VARCHAR}, #{originFilename:VARCHAR},
		#{filesize:NUMERIC}, #{num}, #{lev}, #{sunbun})
	</insert>
	
	<select id="selectBoardAllPaging" resultType="Board" parameterType="Paging">
		select * from(
		select row_number() over(order by refer desc, sunbun asc) rn, spring_board.*
		from spring_board
		<include refid="findWhere" />
		)
		
		<![CDATA[
		where rn > #{start} and rn < #{end}
		]]>
	</select>

	<select id="selectBoardAll" resultType="Board"
		parameterType="map">
		<!-- select * from spring_board order by num desc -->
		<!-- select * from spring_board order by refer desc, sunbun asc -->
		select * from(
		select row_number() over(order by refer desc, sunbun asc) rn, spring_board.*
		from spring_board
		)
		<![CDATA[
		where rn > #{start} and rn < #{end}
		]]>
		<!-- 부등호 등의 문자가 나올때는 CDATA Section으로 감싸자. CDATA는 Character Data라는
		 의미. CDATA로 감싸진 부분은 xml문서로 파싱하지 않고 문자로 취급한다 -->
		<!-- where rn &gt; #{start} and rn &lt; #{end} -->
		<!-- where rn between #{start} and #{end} -->
		
	</select>

	<select id="selectBoardByIdx" resultType="Board"
		parameterType="_int">
		select * from spring_board where num=#{value}
	</select>

	<delete id="deleteBoard" parameterType="int">
		delete from spring_board
		where num=#{value}
	</delete>

	<update id="updateBoard" parameterType="Board">
		update spring_board set name=#{name}, subject=#{subject},
		content=#{content:VARCHAR},
		passwd=#{passwd}
		<if test="filename!=null and filename!=''">
			, filename=#{filename}, filesize=#{filesize},
			originFilename=#{originFilename}
		</if>
		<where>
			num=#{num}
		</where>
	</update>
	<!-- 1단계 : 부모글의 refer lev sunbun 가져오기 -->
	<select id="selectRefLevSunbun" parameterType="int"
		resultType="Board">
		select refer, lev, sunbun from spring_board where
		num=#{value}
	</select>

	<!-- 2단계 : 기존에 달려있는 답변글이 있다면 답변글의 순번을 하나씩 증가시켜주기 -->
	<update id="updateSunbun" parameterType="Board">
		update spring_board set
		sunbun=sunbun + 1
		where refer=#{refer} and sunbun > #{sunbun}
	</update>

	<!-- 3단계 : 답변글쓰기 insert -->
	<insert id="rewriteBoard" parameterType="Board"
		useGeneratedKeys="true" keyProperty="num">
		<selectKey keyProperty="num" resultType="_int"
			order="BEFORE">
			select spring_board_seq.nextval from dual
		</selectKey>
		insert into spring_board(num, name, passwd, subject, content, wdate,
		readnum, filename, originFilename, filesize, refer, lev, sunbun)
		values(#{num}, #{name}, #{passwd}, #{subject}, #{content:VARCHAR},
		SYSDATE, #{readnum}, #{filename:VARCHAR}, #{originFilename:VARCHAR},
		#{filesize:NUMERIC}, #{refer}, #{lev}, #{sunbun})
	</insert>
	
	<sql id="findWhere">
		<if test="findType!=null and findKeyword!=''">
			<where>
				<if test="findType==1">
					subject like '%'||#{findKeyword}||'%'
				</if>
				<if test="findType==2">
					name like '%'||#{findKeyword}||'%'
				</if>
				<if test="findType==3">
					content like '%'||#{findKeyword}||'%'
				</if>
			</where>
		</if>
	</sql>

	<select id="getTotalCount" resultType="int" parameterType="Paging">
		select count(num) from spring_board
		<include refid="findWhere" />
		
	</select>

</mapper>